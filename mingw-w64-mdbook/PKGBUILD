# Maintainer: Konstantin Podsvirov <konstantin@podsvirov.pro>

_realName=mdBook
_realname=${_realName,,}
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=0.4.31
pkgrel=1
pkgdesc="Create book from markdown files, like Gitbook but implemented in Rust (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://github.com/rust-lang/mdBook"
license=('spdx:MPL-2.0')
makedepends=("${MINGW_PACKAGE_PREFIX}-rust")
optdepends=("${MINGW_PACKAGE_PREFIX}-mdbook-pikchr: To render pikchr code blocks as image")
options=('staticlibs' 'strip')
source=("$_realName-$pkgver.tar.gz::$url/archive/v$pkgver.tar.gz")
sha256sums=('0eab74f3861db63fce1a6624cc84a834441f35558128fb0b2e12f8806311283d')

prepare() {
  cd "${srcdir}/${_realName}-${pkgver}"

  cargo vendor \
    --locked \
    --versioned-dirs

  mkdir -p .cargo
  cat >> .cargo/config.toml <<END
[source.crates-io]
replace-with = "vendored-sources"

[source.vendored-sources]
directory = "vendor"
END


  sed -i -e 's/"cfg(all(target_arch = \\"\([^\\]\+\)\\", target_env = \\"gnu\\", target_abi = \\"llvm\\", not(windows_raw_dylib)))"/"\1-pc-windows-gnullvm"/g' \
    "vendor/windows-targets-0.48.0/Cargo.toml"
  sed -i -e 's/\("Cargo.toml":\)"[^"]\+"/\1"'"$(sha256sum "vendor/windows-targets-0.48.0/Cargo.toml" | cut -d' ' -f1)"'"/' \
    "vendor/windows-targets-0.48.0/.cargo-checksum.json"
}

build() {
  cd "${srcdir}"
  rm -rf "build-${MSYSTEM}" | true
  cp -r "${_realName}-${pkgver}" "build-${MSYSTEM}"
  cd "build-${MSYSTEM}"

  WINAPI_NO_BUNDLED_LIBRARIES=1 \
  "${MINGW_PREFIX}/bin/cargo.exe" build \
    --release \
    --locked

  mkdir completions | true
  "./target/release/${_realname}.exe" completions bash > "completions/${_realname}.bash"
  "./target/release/${_realname}.exe" completions fish > "completions/${_realname}.fish"
  "./target/release/${_realname}.exe" completions zsh > "completions/_${_realname}"

  msg "Build documentation"
  cd guide

  "../target/release/${_realname}.exe" build
}

check() {
  cd "${srcdir}/build-${MSYSTEM}"

  "${MINGW_PREFIX}/bin/cargo.exe" test \
    --release \
    --locked
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"

  install -Dm755 "target/release/${_realname}.exe" "${pkgdir}${MINGW_PREFIX}/bin/${_realname}.exe"
  install -Dm644 "completions/${_realname}.bash" "${pkgdir}${MINGW_PREFIX}/share/bash-completion/completions/${_realname}"
  install -Dm644 "completions/${_realname}.fish" -t "${pkgdir}${MINGW_PREFIX}/share/fish/vendor_completions.d"
  install -Dm644 "completions/_${_realname}" -t "${pkgdir}${MINGW_PREFIX}/share/zsh/site-functions"
  install -d "${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}"
  cp -a "guide/book" "${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}/html"
  install -Dm644 "LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}

