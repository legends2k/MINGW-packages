From 8b761c5a76df828ba821514280346d3563d3e2f2 Mon Sep 17 00:00:00 2001
From: Johannes Schindelin <johannes.schindelin@gmx.de>
Date: Tue, 4 Apr 2023 20:45:00 +0200
Subject: [PATCH] Make it relocatable

This uses MSYS2's pathtools to make `connect` find the configuration
file relative to the executable's location.

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 Makefile  |  7 ++++++-
 connect.c | 19 +++++++++++++++++++
 2 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/Makefile b/Makefile
index fd7de37..eca7ea3 100644
--- a/Makefile
+++ b/Makefile
@@ -34,10 +34,15 @@ ifeq ($(UNAME), Windows)
     LDLIBS := ${LDLIBS} -lws2_32 -liphlpapi
 endif
 
+ifneq (,$(MINGW_PREFIX))
+	CFLAGS += -DMINGW_PREFIX='"$(MINGW_PREFIX)"'
+endif
+
 all: connect
 
-connect: connect.o
+connect: connect.o pathtools.o
 connect.o: connect.c
+pathtools.o: pathtools.c
 
 ##
 
diff --git a/connect.c b/connect.c
index 3b59b1d..13d6a08 100644
--- a/connect.c
+++ b/connect.c
@@ -760,6 +760,8 @@ read_parameter_file_1(const char* name)
     }
 }
 
+#include "pathtools.h"
+
 void
 read_parameter_file(void)
 {
@@ -768,7 +770,23 @@ read_parameter_file(void)
     struct passwd *pw;
 #endif
 
+#if !defined(_WIN32)
     read_parameter_file_1(PARAMETER_FILE);
+#else
+    char path[PATH_MAX], *rel, *slash;
+    get_executable_path(progname, path, sizeof (path) / sizeof (path[0]));
+#ifndef MINGW_PREFIX
+#define MINGW_PREFIX ""
+#endif
+    rel = get_relative_path(MINGW_PREFIX "/bin/", PARAMETER_FILE);
+    slash = strrchr(path, '/');
+    if (slash)
+        slash[1] = '\0';
+    strcat (path, rel);
+    simplify_path (path);
+    read_parameter_file_1(path);
+#endif
+
 #if !defined(_WIN32) || defined(cygwin)
     pw = getpwuid(getuid());
     if ( pw == NULL )
-- 
2.40.0.windows.1

